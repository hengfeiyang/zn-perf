# See https://crates.io/crates/arrow#performance-tips
export RUSTFLAGS='-C target-cpu=native'

# Homebrew conflicts with system's `libc.so.6`:
#
# ```
#   = note: /usr/bin/ld: /home/linuxbrew/.linuxbrew/Cellar/xz/5.4.0/lib/liblzma.so: undefined reference to `pthread_condattr_setclock@GLIBC_2.34'
#           /usr/bin/ld: /home/linuxbrew/.linuxbrew/Cellar/xz/5.4.0/lib/liblzma.so: undefined reference to `pthread_create@GLIBC_2.34'
#           /usr/bin/ld: /home/linuxbrew/.linuxbrew/Cellar/xz/5.4.0/lib/liblzma.so: undefined reference to `pthread_sigmask@GLIBC_2.32'
#           /usr/bin/ld: /home/linuxbrew/.linuxbrew/Cellar/xz/5.4.0/lib/liblzma.so: undefined reference to `pthread_join@GLIBC_2.34'
#           clang: error: linker command failed with exit code 1 (use -v to see invocation)
#
#   = note: some `extern` functions couldn't be found; some native libraries may need to be installed or have their path specified
#   = note: use the `-l` flag to specify native libraries to link
#   = note: use the `cargo:rustc-link-lib` directive to specify the native libraries to link with Cargo (see https://doc.rust-lang.org/cargo/reference/build-scripts.html#cargorustc
# -link-libkindname)
#
# error: could not compile `zn-perf` due to previous error
# ```
#
# One workaround that works is to remove Homebrew from PATH.
if [[ -n $HOMEBREW_PREFIX ]]; then
    eval $(direnv stdlib)  # import `PATH_rm`, `path_rm`
    PATH_rm $HOMEBREW_PREFIX/{,s}bin
    path_rm MANPATH $HOMEBREW_PREFIX/share/man
    path_rm INFOPATH $HOMEBREW_PREFIX/share/info
    unset HOMEBREW_PREFIX HOMEBREW_CELLAR HOMEBREW_REPOSITORY
fi
